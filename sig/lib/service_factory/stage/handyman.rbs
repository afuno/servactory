module ServiceFactory
  module Stage
    class Handyman
      def self.work_in: (*untyped) ?{ () -> untyped } -> instance

      def initialize: (Factory factory) -> void

      def assign: (context: instance) -> void

      def methods: () -> Methods

      def run_methods!: () -> void

      private

      attr_reader factory: Factory

      attr_reader context: instance
    end
  end
end
