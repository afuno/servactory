module Servactory
  module InputArguments
    module Tools
      class Check
        @context: instance
        @incoming_arguments: untyped
        @collection_of_input_arguments: Collection

        def self.check!: (*untyped) ?{ () -> untyped } -> void

        def initialize: (instance context, untyped incoming_arguments, Collection collection_of_input_arguments) -> void

        def check!: () -> void

        private

        attr_reader errors: CheckErrors

        def process_input: (InputArgument input) -> void

        def process_option: (Symbol check_key, Hash[Symbol, untyped] check_options, input: InputArgument) -> void

        def process_check_class: (Class check_class, input: InputArgument, check_key: Symbol, check_options: Hash[Symbol, untyped]) -> instance

        def check_classes_from: (InputArgument input) -> Array[Class]

        def errors: -> CheckErrors

        def raise_errors: () -> void
      end
    end
  end
end
