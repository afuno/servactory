module Servactory
  module InputArguments
    class InputArgument
      ARRAY_DEFAULT_VALUE: ^(is: bool, message: Proc | String | nil) -> { is: bool, message: String | nil }

      @internal_name: Symbol?
      @collection_of_options: OptionsCollection

      attr_reader internal_name: Symbol?
      attr_reader name: Symbol

      attr_reader collection_of_options: OptionsCollection

      def initialize: (
        Symbol name,
        as: Symbol?,
        collection_of_options: OptionsCollection,
        type: (Class | Array[Class]),
        **untyped options
      ) -> void

      def add_basic_options_with: (type: (Class | Array[Class]), options: untyped) -> void

      def add_array_option_with: (untyped options) -> OptionsCollection

      def add_default_option_with: (untyped options) -> OptionsCollection

      def add_inclusion_option_with: (untyped options) -> OptionsCollection

      def add_internal_option_with: (untyped options) -> OptionsCollection

      def add_must_option_with: (untyped options) -> OptionsCollection

      def add_required_option_with: (untyped options) -> OptionsCollection

      def add_types_option_with: ((Class | Array[Class]) type) -> OptionsCollection

      def prepare_advanced_for: -> { is: bool, message: Proc | String | nil }

      def with_conflicts?: -> bool

      def conflict_code: -> (Symbol | nil)

      def options_for_checks: () -> Hash[Symbol, untyped]
    end
  end
end
