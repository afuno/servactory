module Servactory
  module InputArguments
    class Option
      DEFAULT_VALUE: ^(is: (bool | nil), message: (String | nil)) -> Proc

      attr_reader name: Symbol

      attr_reader check_class: Class

      attr_reader define_conflicts: (Proc | nil)

      attr_reader need_for_checks: bool

      attr_reader value: ({ is: Symbol, message: String | nil } | bool | nil)
      attr_reader value_key: Symbol

      def initialize: (
        name: Symbol,
        input: InputArgument,
        check_class: Class,
        need_for_checks: bool,
        value_key: Symbol,
        value_fallback: (bool | nil),
        instance_eval: (Proc | nil),
        define_conflicts: (Proc | nil),
        ?with_advanced_mode: bool,
        **untyped options)
      -> void

      def need_for_checks?: -> bool

      private

      def prepare_value_for: (untyped options, value_fallback: bool | nil, with_advanced_mode: bool) -> ({ is: Symbol, message: String | nil } | bool | nil)

      def prepare_advanced_for: (value: ({ is: Symbol, message: String | nil } | bool | nil), value_fallback: (bool | nil)) -> { is: Symbol, message: String | nil }
    end
  end
end
