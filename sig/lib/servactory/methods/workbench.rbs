module Servactory
  module Methods
    class Workbench
      def self.work_with: (*untyped) ?{ () -> untyped } -> untyped

      def initialize: (Collection collection_of_methods) -> void

      def assign: (context: untyped) -> void

      def run!: () -> void

      private

      attr_reader context: instance

      attr_reader collection_of_methods: Collection

      def try_to_use_call: -> void

      def call_wrapper_with_methods: (Proc wrapper, Collection methods) -> void

      def call_methods: (Collection methods) -> void

      def prepare_condition_for: ((Proc | bool)? condition) -> bool

      def unnecessary_for?: (Method make_method) -> bool
    end
  end
end
