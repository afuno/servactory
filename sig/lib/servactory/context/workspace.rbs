module Servactory
  module Context
    module Workspace
      @inputs: Inputs
      @internals: Internals
      @outputs: Outputs
      @errors: Errors
      @service_strict_mode: bool

      def inputs: -> Inputs
      alias inp inputs

      def internals: -> Internals
      alias int internals

      def outputs: -> Outputs
      alias out outputs

      def initialize: () -> void

      def errors: -> Servactory::Errors::Collection

      def error: -> (Errors::InputError | Errors::InternalError | Errors::OutputError | Errors::Failure)

      def fail_input!: (Symbol input_name, message: String) -> void

      def fail!: (message: String, failure_class: singleton(Errors::Failure), meta: untyped?) -> Errors

      def raise_first_fail: () -> (nil | untyped)

      private

      def assign_service_strict_mode: (bool flag) -> bool
    end
  end
end
