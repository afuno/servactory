module Servactory
  module Inputs
    module Tools
      class Validation
        @context: instance
        @incoming_arguments: untyped
        @collection_of_inputs: Collection

        def self.validate!: (*untyped) ?{ () -> untyped } -> void

        def initialize: (instance context, untyped incoming_arguments, Collection collection_of_inputs) -> void

        def validate!: () -> void

        private

        attr_reader errors: CheckErrors

        def process_input: (Input input) -> void

        def process_option: (Symbol check_key, Hash[Symbol, untyped] check_options, input: Input) -> void

        def process_check_class: (Class check_class, input: Input, check_key: Symbol, check_options: Hash[Symbol, untyped]) -> instance

        def check_classes_from: (Input input) -> Array[Class]

        def errors: -> CheckErrors

        def raise_errors: () -> void
      end
    end
  end
end
